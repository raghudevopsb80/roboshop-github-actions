name: Deployment Pipeline
run-name: "${{ github.event.inputs.appVersion }}"

on:
  workflow_call:
    inputs:
      appVersion:
        required: true
        type: string
      appName:
        required: true
        type: string

jobs:
  DEV:
    runs-on: self-hosted
    steps:
      - run: |
          aws eks update-kubeconfig --name dev-eks
          argocd login argocd-dev.rdevopsb80.online --username admin --password $(kubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath="{.data.password}" | base64 -d)
          argocd app create ${{ github.event.inputs.appName }} --upsert --project default --sync-policy auto --repo https://github.com/raghudevopsb80/roboshop-helm --revision HEAD --path . --dest-namespace default --dest-server https://kubernetes.default.svc --values env-dev/${{ github.event.inputs.appName }}.yml --helm-set appVersion=${{ github.event.inputs.appVersion }}

  SECURITY_CHECKS:
    runs-on: self-hosted
    needs:
      - DEV
    steps:
      - uses: actions/checkout@v3
      - run: |
          ls -Al
          trivy kubernetes --scanners=misconfig,vuln  --report=all --timeout=1800s  --disable-node-collector --include-namespaces=default  --ignore-unfixed   -s CRITICAL,HIGH | tee trivy.log
          count=$(cat trivy.log | grep -E '^HIGH|&CRITICAL' | grep -v frontend | wc -l)
          if [ $count -gt 0 ]; then exit 1 ; fi

  QA:
    environment: QA
    runs-on: self-hosted
    needs:
      - SECURITY_CHECKS
    steps:
      - run: echo Hello

  UAT:
    environment: UAT
    runs-on: self-hosted
    needs:
      - QA
    steps:
      - run: echo Hello

  PROD:
    environment: PROD
    runs-on: self-hosted
    needs:
      - UAT
    steps:
      - run: echo Hello

